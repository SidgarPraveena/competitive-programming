Next we consider the problem of generating all permutations of a set of n elements.
For example, the permutations of {0,1,2} are (0,1,2), (0,2,1), (1,0,2), (1,2,0), (2,0,1) and (2,1,0).

*********************************************************************************************************

METHOD 1
using inbuilt function 

CODE

#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

int main()
{
	int n,ele;
	vector<int> arr;
	cout<<"Enter size of array: ";
	cin>>n;
	
	for(int i=0;i<n;i++)
	{
		cin>>ele;
		arr.push_back(ele);
	}
	do
	{
		for(int i=0;i<arr.size();i++)
		{
			cout<<arr[i]<<" ";
		}
		cout<<endl;
	}while(next_permutation(arr.begin(),arr.end()));
	return 0;
}

*********************************************************************************************************

METHOD 2
using Heap’s Algorithm

Heap’s algorithm is used to generate all permutations of n objects. The idea is to generate each permutation from the previous permutation by choosing a pair of elements to interchange, without disturbing the other n-2 elements.

1) The algorithm generates (n-1)! permutations of the first n-1 elements, adjoining the last element to each of these. This will generate all of the permutations that end with the last element.
2) If n is odd, swap the first and last element and if n is even, then swap the ith element (i is the counter starting from 0) and the last element and repeat the above algorithm till i is less than n.
3) In each iteration, the algorithm will produce all the permutations that end with the current last element.

CODE

#include <bits/stdc++.h> 
using namespace std; 


void heapPermutation(vector<int> a, int size, int n) 
{ 
	if (size == 1) 
	{ 
		for(int i=0;i<a.size();i++)
			cout<<a[i]<<" ";
		cout<<endl;
		return; 
	} 

	for (int i=0; i<size; i++) 
	{ 
		heapPermutation(a,size-1,n); 
		if (size%2==1)  //if size is odd, swap first and last element
			swap(a[0], a[size-1]); 

		else  //If size is even, swap ith and last element
			swap(a[i], a[size-1]); 
	} 
} 

int main() 
{ 
	int n,ele;
	vector<int> arr;
	cout<<"Enter size of array: ";
	cin>>n;
	
	for(int i=0;i<n;i++)
	{
		cin>>ele;
		arr.push_back(ele);
	}
	heapPermutation(arr, n, n); 
	return 0; 
} 

*********************************************************************************************************

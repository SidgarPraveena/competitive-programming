class Solution {
    int minUtil(string s, string t)
    {
        int m = s.size(),n = t.size();
        vector<vector<int>> dp(m+1, vector<int>(n+1,0));
        for(int i = 1; i <= m; i++)
        {
            for(int j =1; j <= n; j++)
            {
                if(s[i-1] == t[j-1])
                    dp[i][j] = dp[i-1][j-1]+1;
                else
                    dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
            }
        }
        return dp[m][n];
    }
public:
    int minInsertions(string s) 
    {
        string t = s;
        reverse(s.begin(), s.end());
        int n = s.size();
        return n-minUtil(s,t);
    }
};
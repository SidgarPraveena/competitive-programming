class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) 
    {
        vector<vector<int>> res;
        if (nums.size() <= 2) {
            return res;
        }
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size()-2;)
        {
            int req = -nums[i];
            int l = i+1;
            int r = nums.size()-1;
            while(l < r)
            {
                int sum = nums[l] + nums[r];
                if(sum < req)
                {
                    l++;
                }
                else if(sum > req)
                {
                    r--;
                }
                else
                {
                    vector<int> triplet = {nums[i],nums[l],nums[r]};
                    res.push_back(triplet);
                    while(l < r && nums[l] == triplet[1])
                    {
                        l++;
                    }
                    while(l < r && nums[r] == triplet[2])
                    {
                        r--;
                    }
                }
            }
            while(i < nums.size()-2 && nums[i] == (-req))
                i++;
        }
        return res;
    }
};
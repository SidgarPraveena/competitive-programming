class Solution {
public:
    void getMatrix(vector<int> &t, vector<vector<int>>&matrix,int index)
    {
        for(int i = 0; i < matrix[index].size(); i++)
        {
            if(matrix[index][i] == 0)
            {
                t[i] = 0;
            }
            else
            {
                t[i] += 1;
            }
        }
    }
    int calculateArea(vector<int> t)
    {
        int ans = 0;
        int n = t.size();
        for(int i = 0; i < t.size(); i++)
        {
            ans = max(ans, t[i]*(n-i));
        }
        return ans;
        
    }
    int largestSubmatrix(vector<vector<int>>& matrix) 
    {
        vector<int> t(matrix[0].size(), 0);
        int res = 0;
        for(int i = 0; i < matrix.size(); i++)
        {
            getMatrix(t,matrix,i);
            vector<int> temp = t;
            sort(temp.begin(), temp.end());
            int r = calculateArea(temp);
            res = max(res, r);
        }
        
        return res;
    }
};
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) 
    {    
        vector<int> res;
        if(root == NULL)
            return res;
        queue<TreeNode *> q;
        q.push(root);
        while(!q.empty())
        {
            TreeNode *p = q.front();
            res.push_back(p->val);
            queue<TreeNode *> temp;
            while(!q.empty())
            {
                TreeNode * t= q.front();
                q.pop();
                if(t->right != NULL)
                    temp.push(t->right);
                if(t->left != NULL)
                    temp.push(t->left);
                
            }
            q = temp;
        }
        return res;
    }
};
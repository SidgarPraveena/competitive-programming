class Solution {
public:
    bool isInterleave(string s1, string s2, string s3) 
    {
        int m = s1.size();
        int n = s2.size();
        if(m == 0 && n == 0)
        {
            if(s3.size() > 0)
                return false;
            else
                return true;
        }
        if(m + n < s3.size())
            return false;
        vector<vector<bool>> dp(m+1,vector<bool>(n+1,false));
        dp[0][0] = true;
        for(int i=1; i<=n; i++)
        {
            if(s2[i-1] == s3[i-1])
            {
                if(dp[0][i-1] == true)
                    dp[0][i] = true;
                else
                    dp[0][i] = false;
            }
            else
                dp[0][i] = false;
        }
        for(int i=1; i<=m; i++)
        {
            if(s1[i-1] == s3[i-1])
            {
                if(dp[i-1][0] == true)
                    dp[i][0] = true;
                else
                    dp[i][0] = false;
            }
            else
                dp[i][0] = false;
        }
        for(int i=1; i<=m; i++)
        {
            for(int j=1; j<=n; j++)
            {
                if(s3[i+j-1] == s1[i-1] || s3[i+j-1] == s2 [j-1])
                {
                    if(s3[i+j-1] == s1[i-1])
                        dp[i][j] = dp[i][j] || dp[i-1][j];
                    if(s3[i+j-1] == s2 [j-1]) 
                        dp[i][j] = dp[i][j] || dp[i][j-1];
                }
                else
                    dp[i][j] = false;
            }
        }
        return dp[m][n];   
    }
};
class Solution {
    bool solve(vector<int> &nums, int target, int currSum, int k, int index)
    {
        if(k == 0)
            return true;
        if(currSum == target)
        {
            return solve(nums,target,0,k-1,0);
        }
        for(int i = index; i < nums.size(); i++)
        {
            if(nums[i] == 0 || nums[i]+currSum > target)
                continue;
            int temp = nums[i];
            nums[i] = 0;
            if(solve(nums,target,currSum+temp,k,i+1))
                return true;
            nums[i] = temp;
        }
        return false;
    }
public:
    bool makesquare(vector<int>& nums) 
    {
        if(nums.size() <= 3)
            return false;
        int sum = 0;
        for(auto x: nums)
        {
            sum += x;
        }
        if(sum%4 != 0)
        {
            return false;
        }
        sum /= 4;
        return solve(nums,sum,0,4,0);
    }
};
class Solution {
    void dfs(int source,unordered_map<int,vector<int>> &adj, int &res,int curr,vector<int> &informTime)
    {
        curr = curr + informTime[source];
        res = max(res, curr);
        for(auto it = adj[source].begin(); it != adj[source].end(); it++)
        {
            dfs(*it,adj,res,curr,informTime);
        }
    }
public:
    int numOfMinutes(int n, int headID, vector<int>& manager, vector<int>& informTime) 
    {
        unordered_map<int,vector<int>> adj;
        for(int i=0; i<manager.size(); i++)
        {
            if(manager[i] != -1)
            {
                adj[manager[i]].push_back(i);
            }
        }
        int res = 0,curr = 0;
        dfs( headID,adj, res, curr,informTime);
        return res;
    }
};
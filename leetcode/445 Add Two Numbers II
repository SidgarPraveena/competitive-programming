/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
    ListNode * add(ListNode *l1, ListNode *l2, int &carry)
    {
        if(l1 == NULL || l2 == NULL)
            return NULL;
        ListNode * next = add(l1->next, l2->next, carry);
        int sum = l1->val + l2->val + carry;
        l1->val = sum%10;
        carry = sum/10;
        return l1;
    }
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) 
    {
        ListNode * res = NULL;
        int len1 = 0;
        int len2 = 0;
        ListNode *p1 = l1, *p2 = l2;
        while(p1 != NULL)
        {
            len1++;
            p1 = p1->next;
        }
        while(p2 != NULL)
        {
            len2++;
            p2 = p2->next;
        }
        if(len1 < len2)
        {
            for(int i=0; i<len2 - len1; i++)
            {
                ListNode *t = new ListNode(0,l1);
                l1 = t;
            }
        }
        else
        {
            for(int i=0; i<len1 - len2; i++)
            {
                ListNode *t = new ListNode(0,l2);
                l2 = t;
            }
        }
        int carry = 0;
        res = add(l1,l2,carry);
        if(carry != 0)
            return new ListNode(carry, res);
        return res;
    }
};
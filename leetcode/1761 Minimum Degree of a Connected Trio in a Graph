class Solution {
public:
    int minTrioDegree(int n, vector<vector<int>>& edges) 
    {
        vector<vector<bool>> graph(n+1, vector<bool>(n+1, false));
        vector<int> indegree(n+1, 0);
        for(auto e: edges)
        {
            graph[e[0]][e[1]] = true;
            graph[e[1]][e[0]] = true;
            indegree[e[0]]++;
            indegree[e[1]]++;
        }
        int res = INT_MAX;
        for(int i = 1; i <= n; i++)
        {
            for(int j = i+1; j <= n; j++)
            {
                if(graph[i][j])
                {
                    for(int k = j+1; k <= n; k++)
                    {
                        if(graph[i][k] and graph[j][k])
                        {
                            int val = indegree[i]+indegree[j]+indegree[k]-6;
                            if(val >= 0)
                            {
                                res = min(res, val);
                            }
                        }
                    }
                }
            }
        }
        return res==INT_MAX?-1:res;
    }
};
class Solution {
public:
    bool solve(vector<double> nums)
    {
        int len = nums.size();
        if(len == 1)
        {
            if(abs(nums[0]-24) < 0.00001)
                return true;
            else 
                return false;
        }
        for(int i = 0; i < len; i++)
        {
            for(int j = i+1; j < len; j++)
            {
                double c1 = nums[i], c2 = nums[j];
                vector<double> n;
                n.push_back(c1+c2);
                n.push_back(c1-c2);
                n.push_back(c1*c2);
                n.push_back(c2-c1);
                if(c2 != 0)
                    n.push_back(c1/c2);
                if(c1 != 0)
                    n.push_back(c2/c1);
                for(auto v: n)
                {
                    vector<double> newNums;
                    newNums.push_back(v);
                    for(int k = 0; k <len; k++)
                    {
                        if(k != i  and k != j)
                        {
                            newNums.push_back(nums[k]);
                        }
                    }
                    if(solve(newNums))
                        return true;
                }
            }
        }
        return false;  
    }
    bool judgePoint24(vector<int>& nums) 
    {
        vector<double> n(nums.begin(), nums.end());
        return solve(n);  
    }
};
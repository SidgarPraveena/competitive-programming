/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* root) 
    {
        if(!root)
            return;
        stack<TreeNode* > stk;
        stk.push(root);
        TreeNode* prev = NULL;
        while(!stk.empty())
        {
            TreeNode* t = stk.top();
            stk.pop();
            if(t->right)
            {
                stk.push(t->right);
            }
            if(t->left)
            {
                stk.push(t->left);
            }
            
            if(!prev)
            {
                prev = t;
            }
            else
            {
                prev->left = NULL;
                prev->right = t;
                prev = t;
            }
        }
    }
};
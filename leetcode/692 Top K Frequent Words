class Solution {
    static bool cmp(pair<string, int> p1, pair<string, int> p2)
    {
        return p1.second > p2.second || (p1.second == p2.second && p1.first < p2.first);
    }
public:
    vector<string> topKFrequent(vector<string>& words, int k) 
    {
        vector<string> res;
        map<string, int> mp;
        for(auto word: words)
        {
            mp[word]++;
        }
        vector<pair<string, int>> v;
        for(auto m: mp)
        {
            v.push_back({m.first, m.second});
        }
        sort(v.begin(), v.end(), cmp);
        for(int i=0; i<k; i++)
        {
            res.push_back(v[i].first);
        }
        return res;
    }
};
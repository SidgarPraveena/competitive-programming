/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) 
    {
        if(l1 == NULL)
            return l2;
        if(l2 == NULL)
            return l1;
        if(l1->val > l2->val)
        {
            ListNode*temp = l1;
            l1 = l2;
            l2 = temp;
        }
        ListNode *head = l1;
        while(1)
        {
            if(l1->next == NULL)
            {
                l1->next = l2;
                break;
            }
            if(l2->val < l1->next->val)
            {
                ListNode*t = l1->next;
                l1->next = l2;
                l2 = t;
            }
            else
            {
                l1 = l1->next;
            }
        }
        return head;
    }
};
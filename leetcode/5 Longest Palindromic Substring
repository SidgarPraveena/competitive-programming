class Solution {
public:
    string longestPalindrome(string s) 
    {
        if(s.size() <= 0)
            return "";
        int maxLength = 1;
        int start = 0, n = s.size();
        int low, high;
        for(int i=1; i<n; i++)
        {
            low = i-1;
            high = i;
            while(low >= 0 && high < n && s[low] == s[high])
            {
                if(maxLength < high-low+1)
                {
                    start = low;
                    maxLength = high-low+1;
                }
                low--;
                high++;
            }
            
            low = i-1;
            high = i+1;
            while(low >= 0 && high < n && s[low] == s[high])
            {
                if(maxLength < high-low+1)
                {
                    start = low;
                    maxLength = high-low+1;
                }
                low--;
                high++;
            }
        }
        string res="";
        for(int i=start; i<start+maxLength;i++)
            res = res+s[i];
        return res;
    }
};
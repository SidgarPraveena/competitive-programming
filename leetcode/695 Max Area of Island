class Solution {
    void dfs(int i,int j,vector<vector<int>> &grid, int &res, int &curr)
    {
        if(i<0 || i >= grid.size() || j < 0 || j >= grid[0].size() || grid[i][j] != 1)
            return;
        curr = curr + 1;
        res = max(res,curr);
        grid[i][j] = 2;
        dfs(i+1,j,grid,res,curr);
        dfs(i-1,j,grid,res,curr);
        dfs(i,j+1,grid,res,curr);
        dfs(i,j-1,grid,res,curr);
    }
public:
    int maxAreaOfIsland(vector<vector<int>>& grid) 
    {
        int curr = 0, res = 0;
        for(int i=0; i<grid.size(); i++)
        {
            for(int j=0; j<grid[i].size(); j++)
            {
                if(grid[i][j] == 1)
                {
                    int curr = 0;
                    dfs(i,j,grid,res,curr);
                }
            }
        }
        return res;
    }
};
class Solution {
public:
    void comUtil(vector<int> candidates, vector<vector<int>> &res,int target, vector<int> &temp, int index,int sum)
    {
        if(sum > target)
            return;
        if(sum ==  target)
        {
            res.push_back(temp);
            return;
        }
        for(int i=index; i<candidates.size(); i++)
        {
            
            sum=sum+candidates[i];
            temp.push_back(candidates[i]);
            //cout<<candidates[i]<<" "<<sum<<" ";
            comUtil(candidates, res,target, temp, i, sum);
            temp.pop_back();
            sum=sum-candidates[i];
            //cout<<"after"<<sum<<" ";
        }
        cout<<endl;
    }
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) 
    {
        vector<vector<int>> res;
        vector<int> temp;
        int sum=0;
        for(int i=0;i<candidates.size();i++)
        {
            temp.push_back(candidates[i]);
            comUtil(candidates, res,target, temp, i,candidates[i]);
            temp.pop_back();
        }
        return res;
    }
};
class Solution {
public:
    int kthLargestValue(vector<vector<int>>& matrix, int k) 
    {
        int xor_val = 0;
        multiset<int, greater<int>> s;
        for(int i = 0; i < matrix.size(); i++)
        {
            for(int j = 0; j < matrix[i].size(); j++)
            {
                if(i == 0 && j == 0)
                {
                    s.insert(matrix[i][j]);
                    continue;
                }
                else if(i == 0)
                {
                    matrix[i][j] ^= matrix[i][j-1];
                }
                else if(j == 0)
                {
                    matrix[i][j] ^= matrix[i-1][j];
                }
                else
                {
                    matrix[i][j] ^= matrix[i-1][j];
                    matrix[i][j] ^= matrix[i][j-1];
                    matrix[i][j] ^= matrix[i-1][j-1];
                }
                s.insert(matrix[i][j]);
            }
        }
        int ans = 0;
        if(s.size() >= k)
        {
            for(auto x: s)
            {
                k--;
                if(k == 0)
                    return x;
            }
        }
        return ans;
    }
};
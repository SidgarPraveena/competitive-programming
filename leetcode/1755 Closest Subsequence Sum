class Solution {
public:
    int minAbsDifference(vector<int>& nums, int goal) 
    {
        int n = nums.size();
        int ans = INT_MAX;
        vector<int> s1 = {0}, s2 = {0};
        for(int i = 0; i < (n/2); i++)
        {
            int len = s1.size();
            for(int j = 0; j < len; j++)
            {
                s1.push_back(s1[j]+nums[i]);
            }
        }
        for(int i = n/2 ; i < n; i++)
        {
            int len = s2.size();
            for(int j = 0; j < len; j++)
            {
                s2.push_back(s2[j]+nums[i]);
            }
        }
        
        int s1_size = s1.size(), s2_size = s2.size();
        sort(s2.begin(), s2.end());
        for(auto s: s1)
        {
            int rem = goal-s;
            int e1 = lower_bound(s2.begin(), s2.end(), rem) - s2.begin();
            if(e1 != s2.size())
            {
                ans = min(ans, abs(s2[e1]+s-goal));
            }
            if(e1 != 0)
            {
                ans = min(ans, abs(s2[e1-1]+s-goal));
            }
        }
        return ans;
    }
};
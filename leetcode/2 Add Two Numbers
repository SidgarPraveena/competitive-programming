/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
    void addNumUtil(ListNode* &l1, ListNode* &l2, int carry)
    {
        if(l1 == NULL && l2 == NULL)
        {
            if(carry > 0)
                l1 = new ListNode(carry);
            return ;
        }
        if(l1 == NULL && l2 != NULL)
        {
            swap(l1,l2);
        }
        int r = 0;
        if(l2 != NULL)
        {
            r = l2->val;
        }
        int value = l1->val + r + carry;
        carry = value/10;
        l1->val = value%10;
        addNumUtil(l1->next, l2?l2->next:l2,carry);
    }
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) 
    {
        int carry = 0;
        addNumUtil(l1, l2, carry);
        return l1;
    }
};
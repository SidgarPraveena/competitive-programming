// { Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h>
using namespace std;

int shortestCommonSupersequence(char* , char*, int, int );

int main()
{   
    int t;
    char X[10001], Y[10001];
    cin >> t;
    while(t--){
	cin >> X >> Y;
	cout << shortestCommonSupersequence(X, Y, strlen(X), strlen(Y))<< endl;
    }
	return 0;
}

// } Driver Code Ends


//User function template for C++

// X : 1st given string of size m
// Y : 2nd given string of size n
int shortestCommonSupersequence(char* X, char* Y, int m, int n) 
{
    int dp[m+1][n+1];
    for(int i=0; i<= m; i++)
    {
        dp[i][0] = 0;
    }
    for(int i=0;i<=n;i++)
    {
        dp[0][i] = 0;
    }
    for(int i=1;i<=m;i++)
    {
        for(int j=1;j<=n;j++)
        {
            if(X[i-1] == Y[j-1])
            {
                dp[i][j] = 1+dp[i-1][j-1];
            }
            else
            {
                dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
            }
        }
    }
    int common = dp[m][n];
    return m+n-common;
}
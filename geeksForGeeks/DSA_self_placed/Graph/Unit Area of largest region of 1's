// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

#define SIZE 100


 // } Driver Code Ends


/*  Function to find the area of 1s
*   SIZE: declared globally for matrix definition
*   n, m: row and column of matrix
*   A[][]: 2D matrix from input
*/
void maxarea_util(int A[SIZE][SIZE],int i,int j,int N,int M,int &curr)
{
    if(i>=0 && i<N && j>=0 && j<M && A[i][j] == 1)
    {
        curr++;
        A[i][j] = 0;
        maxarea_util(A,i,j+1,N,M,curr);
        maxarea_util(A,i+1,j+1,N,M,curr);
        maxarea_util(A,i+1,j,N,M,curr);
        maxarea_util(A,i+1,j-1,N,M,curr);
        maxarea_util(A,i,j-1,N,M,curr);
        maxarea_util(A,i-1,j-1,N,M,curr);
        maxarea_util(A,i-1,j,N,M,curr);
        maxarea_util(A,i-1,j+1,N,M,curr);
    }
}
int findMaxArea(int N, int M, int A[SIZE][SIZE] )
{
    int max = INT_MIN,curr = 0;
    for(int i=0;i<N;i++)
    {
        for(int j=0;j<M;j++)
        {
            if(A[i][j] == 1)
            {
                maxarea_util(A,i,j,N,M,curr);
                if(max < curr)
                    max = curr;
                curr = 0;
            }
        }
    }
    return max;
}

// { Driver Code Starts.

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n, m;
        cin >> n >> m;

        int g[SIZE][SIZE];

        for (int i = 0; i < n; i++)
            for (int j = 0; j < m; j++)
                cin >> g[i][j];

        cout << findMaxArea(n, m, g) << endl;
    }

    return 0;
}  // } Driver Code Ends
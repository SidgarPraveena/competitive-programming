// { Driver Code Starts
#include <bits/stdc++.h>

#define MAX 1000
using namespace std;

bool is_possible(vector<vector<int>> &a, int n);

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;

        vector<vector<int>> a(MAX, vector<int>(MAX, 0));
        for (int i = 0; i < n; i++)
            for (int j = 0; j < n; j++) cin >> a[i][j];

        cout << is_possible(a, n) << endl;
    }
    return 0;
}// } Driver Code Ends


// User function template for C++


// M : input matrix
// N : size of the matrix

void check_util(vector <vector <int>> &arr,int x,int y,vector <vector <bool>>& vis,int n)
{
    if(x>=n || x<0 || y>=n || y<0|| vis[x][y] == true || arr[x][y]==0)
        return;
    vis[x][y]=true;
    check_util(arr,x+1,y,vis,n);
    check_util(arr,x-1,y,vis,n);
    check_util(arr,x,y+1,vis,n);
    check_util(arr,x,y-1,vis,n);
    
}
bool is_possible(vector <vector <int>> &M, int N) 
{
    vector <vector <bool>> vis(N,vector <bool>(N,false));
    int a,b,dx,dy;
    for(int i=0;i<N;i++)
    {
        for(int j=0;j<N;j++)
        {
            if(M[i][j] == 1)
            {
                a=i;
                b=j;
            }
            else if(M[i][j] == 2)
            {
                dx = i;
                dy = j;
            }
        }
    }
    check_util(M,a,b,vis,N);
    return vis[dx][dy];
}

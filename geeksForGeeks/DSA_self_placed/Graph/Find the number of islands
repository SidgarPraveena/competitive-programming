#include <bits/stdc++.h>
using namespace std;

int findIslands(vector<int> A[], int N, int M);

int main() {

    int T;
    cin >> T;
    while (T--) {
        int N, M;
        cin >> N >> M;
        vector<int> A[N];
        for (int i = 0; i < N; i++) {
            vector<int> temp(M);
            A[i] = temp;
            for (int j = 0; j < M; j++) {
                cin >> A[i][j];
            }
        }
        cout << findIslands(A, N, M) << endl;
    }
    return 0;
}// } Driver Code Ends


/*you are required to complete this method*/

/*  Function to find number of islands in the given graph
*   A[]: input array
*   N, M: Row and column of given matrix
*/
void islandUtil(vector<int> A[],int i,int j,int N,int M)
{
    if(i>=0 && j>=0 && i<N && j<M && A[i][j] == 1)
    {
        A[i][j]=-1;
        islandUtil(A,i,j+1,N,M);
        islandUtil(A,i+1,j,N,M);
        islandUtil(A,i+1,j+1,N,M);
        islandUtil(A,i+1,j-1,N,M);
        islandUtil(A,i,j-1,N,M);
        islandUtil(A,i-1,j-1,N,M);
        islandUtil(A,i-1,j,N,M);
        islandUtil(A,i-1,j+1,N,M);
    }
}
int findIslands(vector<int> A[], int N, int M) 
{
    int res;
    for(int i=0;i<N;i++)
    {
        for(int j=0;j<M;j++)
        {
            if(A[i][j] == 1)
            {
                res++;
                islandUtil(A,i,j,N,M);
            }
        }
    }
    return res;
    // Your code here
}

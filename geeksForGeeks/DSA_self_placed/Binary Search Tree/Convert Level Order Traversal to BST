// { Driver Code Starts
//Initial Template for C++
#include <bits/stdc++.h>
using namespace std;

struct Node {
    int data;
    Node* right;
    Node* left;
    
    Node(int x){
        data = x;
        right = NULL;
        left = NULL;
    }
};

void preorderTraversal(Node* root)
{
	if (!root)return;
	cout << root->data << " ";
	preorderTraversal(root->left);
	preorderTraversal(root->right); 
}

Node* constructBst(int arr[], int n);

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        int arr[n];
        for(int i=0; i<n; i++)cin>>arr[i];
        Node *root = constructBst(arr, n);
        preorderTraversal(root);
        cout<<endl;
    }
	return 0; 
}// } Driver Code Ends


//User function Template for C++
/*
Structure of the Node of the node of the bst 
should be as
struct Node {
    int data;
    Node* right;
    Node* left;
    
    Node(int x){
        data = x;
        right = NULL;
        left = NULL;
    }
};
*/
// You are required to complete this function
Node *bst_util(int arr[],int i,int n,int l,int r)
{
    if(i == n || l > r)
    {
        return NULL;
    }
    while(i < n && (arr[i] < l || arr[i] > r))
    {
        i++;
    }
    if(i == n)
        return NULL;
    Node *root = new Node(arr[i]);
    root->left = bst_util(arr,i+1,n,l,arr[i]-1);
    root->right = bst_util(arr,i+1,n,arr[i]+1,r);
    return root;
}
Node* constructBst(int arr[], int n)
{
    int i=0;
    return bst_util(arr,i,n,INT_MIN,INT_MAX);
    // Code here
	
}

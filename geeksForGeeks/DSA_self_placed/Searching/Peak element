// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends


/* The function should return the index of any
   peak element present in the array */

// arr: input array
// n: size of array
int peakElementUtil(int arr[],int n,int low,int high)
{
    if(low > high)
        return -1;
    int mid=(low+high)/2;
    if((mid == 0 || arr[mid-1] <= arr[mid]) && (mid == n-1 || arr[mid+1] <= arr[mid]))
    {
        return mid;
    }
    if(mid != 0 && arr[mid-1] > arr[mid] )
    {
        return peakElementUtil(arr,n,low, mid-1);
    }
    if(mid != n-1 && arr[mid+1] > arr[mid])
    {
        return peakElementUtil(arr,n,mid+1,high);
    }
}
int peakElement(int arr[], int n)
{
    return peakElementUtil(arr,n,0,n-1);
   // Your code here
}

// { Driver Code Starts.

int main() {
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		int a[n];
		for(int i=0;i<n;i++)
		{
			cin>>a[i];
		}
		bool f=0;
		int A = peakElement(a,n);
		
		if(n==1)
		f=1;
		else
		if(A==0 and a[0]>=a[1])
		f=1;
		else if(A==n-1 and a[n-1]>=a[n-2])
		f=1;
		else if(a[A] >=a[A+1] and a[A]>= a[A-1])
		f=1;
		else
		f=0;
		
		cout<<f<<endl;
		
	}

	return 0;
}  // } Driver Code Ends
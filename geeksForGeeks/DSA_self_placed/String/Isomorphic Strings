// { Driver Code Starts
// C++ program to check if two strings are isomorphic
#include<iostream>
#include<string.h>

using namespace std;
#define MAX_CHARS 256

bool areIsomorphic(string, string);

// Driver program
int main()
{
    int t;
    cin>>t;
    string s1,s2;
    while (t--) {
        cin>>s1;
        cin>>s2;
        cout<<areIsomorphic(s1,s2)<<endl;
    }
    
    return 0;
}// } Driver Code Ends


// This function returns true if str1 and str2 are ismorphic
// else returns false
#include <bits/stdc++.h>
bool areIsomorphic(string str1, string str2)
{
    
    // Your code here
    if(str1.size() != str2.size())
        return false;
    unordered_map<char,int> str1_map,str2_map;
    int num=1;
    for(int i=0;i<str1.size();i++)
    {
        if(str1_map.find(str1[i]) == str1_map.end())
        {
            str1_map[str1[i]]=num;
            num++;
        }
    }
    num=1;
    for(int i=0;i<str2.size();i++)
    {
        if(str2_map.find(str2[i]) == str2_map.end())
        {
            str2_map[str2[i]]=num;
            num++;
        }
    }
    for(int i=0;i<str1.size();i++)
    {
        if(str1_map[str1[i]] != str2_map[str2[i]])
            return false;
    }
    return true;
}
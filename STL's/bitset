A bitset is an array whose each value is either 0 or 1. 
For example, the following code creates a bitset that contains 10 elements:
			bitset<10> s;
			s[1] = 1;
			s[3] = 1;
			s[4] = 1;
			s[7] = 1;
			cout << s[4] << "\n"; // 1
			cout << s[5] << "\n"; // 0

The benefit of using bitsets is that they require less memory than ordinary arrays, because each element in a bitset only uses one bit of memory.
The following code shows another way to create the above bitset:
			bitset<10> s(string("0010011010")); // from right to left
			cout << s[4] << "\n"; // 1
			cout << s[5] << "\n"; // 0

The function count returns the number of ones in the bitset:
			bitset<10> s(string("0010011010"));
			cout << s.count() << "\n"; // 4

